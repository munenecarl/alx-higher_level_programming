The ``matrix_division`` module
==========================

using matrix_divided
-----------------

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
	
	#case 1
	>>> matrix = [[1,2,3],[4,5,5]]
	>>> matrix_divided(matrix,3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

	#case 2
	>>> matrix_divided(matrix,0)
	Traceback (most recent call last):
	  ...
	ZeroDivisionError: division by zero

	#case 3
	>>> matrix = [[1,a,3],[4,5,6]]
	>>> matrix_divided(matrix,3)
	Traceback (most recent call last):
	  ...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	#case 4
	>>> matrix = [[1,2],[3,4,5,6]]
	>>> matrix_divided(matrix,3)
	Traceback (most recent call last):
	  ...
	TypeError: Each row of the matrix must have the same size

	#case 5
	>>> matrix = [[1,2,3],[4,5,6]]
	>>> matrix_divided(matrix, b)
	Traceback (most recent call last):
	  ...
	TypeError: div must be a number

	#case 6
	>>> matrix = [[1,2,3],[4,5,6],[7.8.9]]
	>>> matrix_divided(matrix,3)
	Traceback (most recent call last):
	  ...
	TypeError: div must be a number
	TypeError: Each row of the matrix must have the same size

	#case 7
	>>> matrix = [[1,2,3],[4,5,6]]
	>>> matrix_divided(matrix,{1,2})
	Traceback (most recent call last):
	  ...
	TypeError: div must be a number

	#case 8
	>>> matrix = [[1,2,3],[4,5,6]]
	>>> matrix_divided(matrix,[1,2])
	Traceback (most recent call last):
	  ...
	TypeError: div must be a number